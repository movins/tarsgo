// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Mesage.ext.proto

package tcpToRpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MSGInput struct {
	Alias string            `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	Opt   map[string]string `protobuf:"bytes,3,rep,name=opt,proto3" json:"opt,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Req   []byte            `protobuf:"bytes,2,opt,name=req,proto3" json:"req,omitempty"`
}

func (m *MSGInput) Reset()         { *m = MSGInput{} }
func (m *MSGInput) String() string { return proto.CompactTextString(m) }
func (*MSGInput) ProtoMessage()    {}
func (*MSGInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_77bfdbe848603b31, []int{0}
}

func (m *MSGInput) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *MSGInput) GetOpt() map[string]string {
	if m != nil {
		return m.Opt
	}
	return nil
}

func (m *MSGInput) GetReq() []byte {
	if m != nil {
		return m.Req
	}
	return nil
}

type MSGOutput struct {
	Ret  int32             `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Opt  map[string]string `protobuf:"bytes,2,rep,name=opt,proto3" json:"opt,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Rsp  []byte            `protobuf:"bytes,3,opt,name=rsp,proto3" json:"rsp,omitempty"`
	Desc string            `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (m *MSGOutput) Reset()         { *m = MSGOutput{} }
func (m *MSGOutput) String() string { return proto.CompactTextString(m) }
func (*MSGOutput) ProtoMessage()    {}
func (*MSGOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_77bfdbe848603b31, []int{1}
}

func (m *MSGOutput) GetRet() int32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *MSGOutput) GetOpt() map[string]string {
	if m != nil {
		return m.Opt
	}
	return nil
}

func (m *MSGOutput) GetRsp() []byte {
	if m != nil {
		return m.Rsp
	}
	return nil
}

func (m *MSGOutput) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func init() {
	proto.RegisterType((*MSGInput)(nil), "tcpToRpc.MSGInput")
	proto.RegisterMapType((map[string]string)(nil), "tcpToRpc.MSGInput.OptEntry")
	proto.RegisterType((*MSGOutput)(nil), "tcpToRpc.MSGOutput")
	proto.RegisterMapType((map[string]string)(nil), "tcpToRpc.MSGOutput.OptEntry")
}

func init() {
	proto.RegisterFile("Mesage.ext.proto", fileDescriptor_77bfdbe848603b31)
}

var fileDescriptor_77bfdbe848603b31 = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xf0, 0x4d, 0x2d, 0x4e,
	0x4c, 0x4f, 0xd5, 0x4b, 0xad, 0x28, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x28, 0x49,
	0x2e, 0x08, 0xc9, 0x0f, 0x2a, 0x48, 0x56, 0x9a, 0xc9, 0xc8, 0xc5, 0xe1, 0x1b, 0xec, 0xee, 0x99,
	0x57, 0x50, 0x5a, 0x22, 0x24, 0xc2, 0xc5, 0x9a, 0x98, 0x93, 0x99, 0x58, 0x2c, 0xc1, 0xa8, 0xc0,
	0xa8, 0xc1, 0x19, 0x04, 0xe1, 0x08, 0xe9, 0x72, 0x31, 0xe7, 0x17, 0x94, 0x48, 0x30, 0x2b, 0x30,
	0x6b, 0x70, 0x1b, 0x49, 0xeb, 0xc1, 0xb4, 0xea, 0xc1, 0xb4, 0xe9, 0xf9, 0x17, 0x94, 0xb8, 0xe6,
	0x95, 0x14, 0x55, 0x06, 0x81, 0xd4, 0x09, 0x09, 0x70, 0x31, 0x17, 0xa5, 0x16, 0x4a, 0x30, 0x29,
	0x30, 0x6a, 0xf0, 0x04, 0x81, 0x98, 0x52, 0x66, 0x5c, 0x1c, 0x30, 0x25, 0x20, 0xd9, 0xec, 0xd4,
	0x4a, 0xa8, 0x05, 0x20, 0x26, 0xc8, 0xd2, 0xb2, 0xc4, 0x9c, 0xd2, 0x54, 0xb0, 0x0e, 0xce, 0x20,
	0x08, 0xc7, 0x8a, 0xc9, 0x82, 0x51, 0x69, 0x35, 0x23, 0x17, 0xa7, 0x6f, 0xb0, 0xbb, 0x7f, 0x69,
	0x09, 0xc8, 0x71, 0x60, 0x73, 0x4b, 0xc0, 0x3a, 0x59, 0x41, 0xe6, 0x96, 0x08, 0xe9, 0x41, 0x1c,
	0xc6, 0x04, 0x76, 0x98, 0x0c, 0x8a, 0xc3, 0x20, 0x7a, 0xb0, 0xb8, 0xac, 0xb8, 0x40, 0x82, 0x19,
	0xea, 0xb2, 0xe2, 0x02, 0x21, 0x21, 0x2e, 0x96, 0x94, 0xd4, 0xe2, 0x64, 0x09, 0x16, 0xb0, 0xd5,
	0x60, 0x36, 0xb9, 0xae, 0x75, 0xe2, 0x58, 0xc4, 0xc4, 0x1a, 0x10, 0xe4, 0x1f, 0xe2, 0x9f, 0xc4,
	0x06, 0x0e, 0x64, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x45, 0x26, 0x11, 0x78, 0x01,
	0x00, 0x00,
}
